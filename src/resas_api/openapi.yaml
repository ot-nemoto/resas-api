openapi: 3.0.0
paths:
  /population/composition/transition:
    post:
      summary: 人口推移
      operationId: api.v1.population.composition.transition
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    oneOf:
                      - properties:
                          perf_code:
                            type: array
                            items:
                              type: string
                      - properties:
                          city_code:
                            type: array
                            items:
                              type: string
                    type: object
                  result:
                    type: object
                    properties:
                      boundaryYear:
                        type: integer
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            label:
                              type: string
                              enum:
                                - 総人口
                                - 年少人口
                                - 生産年齢人口
                                - 老年人口
                            data:
                              type: array
                              items:
                                type: object
                                properties:
                                  year:
                                    type: integer
                                  value:
                                    type: integer
                                  rate:
                                    type: number
              examples: {}
      description: 地域単位の人口推移を返します。
      parameters: []
      tags:
        - 1.人口マップ / 1.人口構成
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    pref_code:
                      type: array
                      minItems: 1
                      maxItems: 10
                      uniqueItems: true
                      description: 都道府県コード
                      items:
                        $ref: '#/components/schemas/pref_code'
                  required:
                    - pref_code
                - properties:
                    city_code:
                      type: array
                      minItems: 1
                      maxItems: 10
                      uniqueItems: true
                      description: 市区町村コード
                      items:
                        $ref: '#/components/schemas/city_code'
                  required:
                    - city_code
              type: object
        description: ''
  /population/composition/pyramid:
    post:
      summary: 人口ピラミッド
      operationId: api.v1.population.composition.pyramid
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  params:
                    oneOf:
                      - properties:
                          perf_code:
                            type: array
                            items:
                              type: string
                          year:
                            type: integer
                      - properties:
                          city_code:
                            type: array
                            items:
                              type: string
                          year:
                            type: integer
                    type: object
                  result:
                    type: object
                    properties:
                      data:
                        type: object
                        properties:
                          year:
                            type: integer
                          oldAgeCount:
                            type: integer
                          oldAgePercent:
                            type: number
                          middleAgeCount:
                            type: integer
                          middleAgePercent:
                            type: number
                          newAgeCount:
                            type: integer
                          newAgePercent:
                            type: number
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                class:
                                  type: string
                                man:
                                  type: integer
                                manPercent:
                                  type: number
                                woman:
                                  type: integer
                                womanPercent:
                                  type: number
              examples: {}
      description: 地域単位、年単位の人口ピラミッドを返します。
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    pref_code:
                      type: array
                      description: 都道府県コード
                      items:
                        $ref: '#/components/schemas/pref_code'
                    year:
                      type: integer
                      enum:
                        - 1980
                        - 1985
                        - 1990
                        - 1995
                        - 2000
                        - 2005
                        - 2010
                        - 2015
                        - 2020
                        - 2025
                        - 2030
                        - 2035
                        - 2040
                        - 2045
                      description: 年
                  required:
                    - pref_code
                    - year
                - properties:
                    city_code:
                      type: array
                      description: |
                        市区町村コード
                      items:
                        $ref: '#/components/schemas/city_code'
                    year:
                      type: integer
                      enum:
                        - 1980
                        - 1985
                        - 1990
                        - 1995
                        - 2000
                        - 2005
                        - 2010
                        - 2015
                        - 2020
                        - 2025
                        - 2030
                        - 2035
                        - 2040
                        - 2045
                      description: 年
                  required:
                    - city_code
                    - year
              type: object
            examples: {}
      tags:
        - 1.人口マップ / 1.人口構成
  /population/sum/for_line_bar:
    post:
      summary: 人口増減
      operationId: api.v1.population.sum.for_line_bar
      responses:
        '200':
          description: OK
      tags:
        - 1.人口マップ / 2.人口増減
      description: 地域単位の人口増減を返します。
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    pref_code:
                      type: array
                      minItems: 1
                      maxItems: 10
                      uniqueItems: true
                      description: 都道府県コード
                      items:
                        $ref: '#/components/schemas/pref_code'
                  required:
                    - pref_code
                - properties:
                    city_code:
                      type: array
                      minItems: 1
                      maxItems: 10
                      uniqueItems: true
                      description: 市区町村コード
                      items:
                        $ref: '#/components/schemas/city_code'
                  required:
                    - city_code
              type: object
  /population/sum/sum_line:
    post:
      summary: 出生数・死亡数 / 転入数・転出数
      operationId: api.v1.population.sum.sum_line
      responses:
        '200':
          description: OK
      tags:
        - 1.人口マップ / 2.人口増減
      description: 地域単位の出生数、死亡数、転入数、転出数を返します。
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    pref_code:
                      type: array
                      minItems: 1
                      maxItems: 10
                      uniqueItems: true
                      description: 都道府県コード
                      items:
                        $ref: '#/components/schemas/pref_code'
                  required:
                    - pref_code
                - properties:
                    city_code:
                      type: array
                      minItems: 1
                      maxItems: 10
                      uniqueItems: true
                      description: 市区町村コード
                      items:
                        $ref: '#/components/schemas/city_code'
                  required:
                    - city_code
              type: object
    parameters: []
  /population/sum/transition_bar_line:
    post:
      summary: 自然増減・社会増減の推移
      operationId: api.v1.population.sum.transition_bar_line
      responses:
        '200':
          description: OK
      tags:
        - 1.人口マップ / 2.人口増減
      description: 地域単位の人口増減数の推移を返します。
      requestBody:
        content:
          application/json:
            schema:
              oneOf:
                - properties:
                    pref_code:
                      type: array
                      minItems: 1
                      maxItems: 10
                      uniqueItems: true
                      description: 都道府県コード
                      items:
                        $ref: '#/components/schemas/pref_code'
                  required:
                    - pref_code
                - properties:
                    city_code:
                      type: array
                      minItems: 1
                      maxItems: 10
                      uniqueItems: true
                      description: 市区町村コード
                      items:
                        $ref: '#/components/schemas/city_code'
                  required:
                    - city_code
              type: object
    parameters: []
  /population/sum/perYear:
    get:
      summary: 人口増減率
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      line:
                        type: object
                        properties:
                          boundaryYear:
                            type: integer
                            description: 実績値と将来の推計値の区切り年
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                year:
                                  type: integer
                                  description: 年
                                value:
                                  type: number
                                  description: 総人口の比率
                      bar:
                        type: object
                        properties:
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                year:
                                  type: integer
                                  description: 年
                                sum:
                                  type: number
                                  description: 総人口の比率（折れ線の総人口の比率と同じデータ）
                                class:
                                  type: array
                                  items:
                                    type: object
                                    properties:
                                      label:
                                        type: string
                                        description: 老年人口 生産年齢人口 年少人口
                                      value:
                                        type: number
                                        description: 比率
      operationId: api.v1.population.sum.per_year
      tags:
        - 1.人口マップ / 2.人口増減
      description: 地域単位、年単位の人口増減率情報を返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
        - $ref: '#/components/parameters/addArea'
  /population/sum/estimate:
    get:
      summary: 出生数・死亡数／転入数・転出数
      tags:
        - 1.人口マップ / 2.人口増減
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      boundaryYear:
                        type: integer
                        description: 実績値と推計値の区切り年
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            label:
                              type: string
                              description: ラベル + 総人口・転入数・転出数・出生数・死亡数
                            data:
                              type: array
                              items:
                                type: object
                                properties:
                                  year:
                                    type: integer
                                    description: 年
                                  value:
                                    type: integer
                                    description: 人口(千人)
      operationId: api.v1.population.sum.estimate
      description: 地域単位、年単位の出生数・死亡数／転入数・転出数の情報を返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
        - $ref: '#/components/parameters/addArea'
  /population/nature:
    get:
      summary: 人口の自然増減
      tags:
        - 1.人口マップ / 3.人口の自然増減
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      line:
                        type: object
                        properties:
                          boundaryYear:
                            type: integer
                            description: 実績値と将来の推計値の区切り年
                          data:
                            type: array
                            items:
                              type: object
                              properties:
                                yearRange:
                                  type: string
                                  description: |-
                                    年度範囲<br>
                                    市区町村コードが-の場合は0、市区町村コードが-でない場合はyyyy-yyyyの形式
                                year:
                                  type: integer
                                  description: |-
                                    年<br>
                                    市区町村コードが-の場合は年、市区町村コードが-でない場合はyearRangeの間の値（例:2000-2005の時2003）
                                value:
                                  type: number
                                  description: 合計特殊出生率
                      bar:
                        type: object
                        properties:
                          boundaryYear:
                            type: integer
                            description: 実績値と将来の推計値の区切り年
                          mandata:
                            type: array
                            items:
                              type: object
                              properties:
                                year:
                                  type: integer
                                  description: 年度
                                value:
                                  type: integer
                                  description: 人数(千人)
                          womandata:
                            type: array
                            items:
                              type: object
                              properties:
                                year:
                                  type: integer
                                  description: 年度
                                value:
                                  type: integer
                                  description: 人数(千人)
      operationId: api.v1.population.nature.for_line_bar
      description: 地域単位、年単位の人口自然増減情報を返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
        - schema:
            type: string
            enum:
              - '-'
              - '5'
              - '10'
              - '15'
              - '20'
              - '25'
              - '30'
              - '35'
              - '40'
              - '45'
              - '50'
              - '55'
              - '60'
              - '65'
              - '70'
              - '75'
              - '80'
              - '85'
            default: '-'
          in: query
          name: ageFrom
          description: 表示する年齢(開始)
        - schema:
            type: string
            default: '-'
            enum:
              - '-'
              - '4'
              - '9'
              - '14'
              - '19'
              - '24'
              - '29'
              - '34'
              - '39'
              - '44'
              - '49'
              - '54'
              - '59'
              - '64'
              - '69'
              - '74'
              - '79'
              - '84'
              - '89'
          in: query
          name: ageTo
          description: 表示する年齢(終了)
  /population/society/forArea:
    get:
      summary: 地域ブロック別純移動数
      tags:
        - 1.人口マップ / 4.人口の社会増減
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            year:
                              type: integer
                              description: 年
                            positiveAreas:
                              type: array
                              items:
                                type: object
                                properties:
                                  areaCode:
                                    type: string
                                    description: 増加地域ブロックコード
                                  areaName:
                                    type: string
                                    description: 増加地域ブロック名
                                  value:
                                    type: integer
                                    description: 移動数
                            negativeAreas:
                              type: array
                              items:
                                type: object
                                properties:
                                  areaCode:
                                    type: string
                                    description: 減少地域ブロックコード
                                  areaName:
                                    type: string
                                    description: 減少地域ブロック名
                                  value:
                                    type: integer
                                    description: 移動数
                            total:
                              type: object
                              properties:
                                value:
                                  type: integer
                                  description: 純移動数
      operationId: api.v1.population.society.for_area
      description: 地域ブロック別純移動数を返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
  /population/society/forAgeClass:
    get:
      summary: 年齢階級別純移動数
      tags:
        - 1.人口マップ / 4.人口の社会増減
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            year:
                              type: integer
                              description: 年
                            positiveAgeClasses:
                              type: array
                              items:
                                type: object
                                properties:
                                  ageClass:
                                    type: integer
                                    description: 増加年齢階級コード
                                  age:
                                    type: string
                                    description: 増加年齢階級
                                  value:
                                    type: integer
                                    description: 移動数
                            negativeAgeClasses:
                              type: array
                              items:
                                type: object
                                properties:
                                  ageClass:
                                    type: integer
                                    description: 減少年齢階級コード
                                  age:
                                    type: string
                                    description: 減少年齢階級
                                  value:
                                    type: integer
                                    description: 移動数
                            total:
                              type: object
                              properties:
                                value:
                                  type: integer
                                  description: 純移動数
      operationId: api.v1.population.society.for_age_class
      description: 年齢階級別純移動数を返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
  /population/society/forAgeClassLine:
    get:
      summary: 年齢階級別純移動数の時系列分析
      tags:
        - 1.人口マップ / 4.人口の社会増減
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            label:
                              type: string
                              description: 期間
                            data:
                              type: array
                              items:
                                type: object
                                properties:
                                  axisx:
                                    type: string
                                    description: 年齢階級
                                  axisy:
                                    type: integer
                                    description: 移動数
      operationId: api.v1.population.society.for_age_class_line
      description: 年齢階級別純移動数の時系列分析を返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
  /employEducation/localjobAcademic/toTransition:
    get:
      summary: 就職者数・進学者数の推移
      tags:
        - 1.人口マップ / 5.新卒者就職・進学
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      changes:
                        type: array
                        items:
                          type: object
                          properties:
                            label:
                              type: string
                              description: 対象の都道府県名
                            prefCode:
                              type: string
                              description: 対象の都道府県コード
                            data:
                              type: array
                              items:
                                type: object
                                properties:
                                  year:
                                    type: integer
                                    description: 年
                                  value:
                                    type: number
                                    description: 実数 / 就職率 / 進学率
      operationId: api.v1.employ_education.localjob_academic.to_transition
      description: 指定地域に関する、就職者数・進学者数の推移を返します。
      parameters:
        - schema:
            type: integer
            minimum: 1
            maximum: 47
          in: query
          name: prefecture_cd
          description: 都道府県コード<br>`1` 北海道 `2` 青森県 `3` 岩手県 `4` 宮城県 `5` 秋田県 `6` 山形県 `7` 福島県 `8` 茨城県<br>`9` 栃木県 `10` 群馬県 `11` 埼玉県 `12` 千葉県 `13` 東京都 `14` 神奈川県 `15` 新潟県 `16` 富山県<br>`17` 石川県 `18` 福井県 `19` 山梨県 `20` 長野県 `21` 岐阜県 `22` 静岡県 `23` 愛知県 `24` 三重県<br>`25` 滋賀県 `26` 京都府 `27` 大阪府 `28` 兵庫県 `29` 奈良県 `30` 和歌山県 `31` 鳥取県 `32` 島根県<br>`33` 岡山県 `34` 広島県 `35` 山口県 `36` 徳島県 `37` 香川県 `38` 愛媛県 `39` 高知県 `40` 福岡県<br>`41` 佐賀県 `42` 長崎県 `43` 熊本県 `44` 大分県 `45` 宮崎県 `46` 鹿児島県 `47` 沖縄県
          required: true
        - schema:
            type: string
            enum:
              - '0'
              - '1'
            default: '0'
          in: query
          name: displayMethod
          description: 表示方法<br>`0` 実数<br>`1` 就職率・進学率
        - schema:
            type: string
            default: '0'
            enum:
              - '0'
              - '1'
              - '2'
              - '3'
          in: query
          name: matter
          description: 表示内容<br>`0` 地元就職<br>`1` 流出<br>`2` 流入<br>`3` 純流入
        - schema:
            type: string
            enum:
              - '0'
              - '1'
              - '2'
            default: '0'
          in: query
          name: classification
          description: 表示分類<br>`0` 就職・進学の合計<br>`1` 進学<br>`2` 就職
        - schema:
            type: string
            enum:
              - '00'
              - '10'
              - '11'
              - '12'
              - '20'
            default: '00'
          in: query
          name: displayType
          description: 表示区分<br>`00` すべての就職・進学<br>`10` すべての進学<br>`11` 大学進学<br>`12` 短期大学進学<br>`20` 就職
        - schema:
            type: string
            enum:
              - '0'
              - '1'
              - '2'
            default: '0'
          in: query
          name: gender
          description: 性別<br>`0` 総数<br>`1` 男性<br>`2` 女性
  /population/mesh/chart:
    get:
      summary: 人口区分メッシュ度数分布図
      tags:
        - 1.人口マップ / 7.人口メッシュ
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefCode:
                        type: string
                        description: 対象の県コード
                      prefName:
                        type: string
                        description: 対象の県名
                      cityCode:
                        type: string
                        description: 対象の市区町村コード
                      cityName:
                        type: string
                        description: 対象の市区町村名
                      year:
                        type: string
                        description: 年
                      displayMethod:
                        type: string
                        description: 表示内容
                      matter:
                        type: string
                        description: 表示方法
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            classification_cd:
                              type: string
                              description: 区分ランク
                            classification_name:
                              type: string
                              description: 区分表示名
                            value1:
                              type: integer
                              description: メッシュ数の値
                            value2:
                              type: number
                              description: メッシュ累積度数の値
                            value3:
                              type: number
                              description: 人口累積度数の値
      operationId: api.v1.population.mesh.chart
      description: 指定地域に関する、地域人口メッシュ数と人口累積度数を返します。
      parameters:
        - schema:
            type: integer
          in: query
          name: year
          description: 年度
          required: true
        - schema:
            type: integer
          in: query
          name: prefecture_cd
          description: 都道府県コード<br>`1` 北海道 `2` 青森県 `3` 岩手県 `4` 宮城県 `5` 秋田県 `6` 山形県 `7` 福島県 `8` 茨城県<br>`9` 栃木県 `10` 群馬県 `11` 埼玉県 `12` 千葉県 `13` 東京都 `14` 神奈川県 `15` 新潟県 `16` 富山県<br>`17` 石川県 `18` 福井県 `19` 山梨県 `20` 長野県 `21` 岐阜県 `22` 静岡県 `23` 愛知県 `24` 三重県<br>`25` 滋賀県 `26` 京都府 `27` 大阪府 `28` 兵庫県 `29` 奈良県 `30` 和歌山県 `31` 鳥取県 `32` 島根県<br>`33` 岡山県 `34` 広島県 `35` 山口県 `36` 徳島県 `37` 香川県 `38` 愛媛県 `39` 高知県 `40` 福岡県<br>`41` 佐賀県 `42` 長崎県 `43` 熊本県 `44` 大分県 `45` 宮崎県 `46` 鹿児島県 `47` 沖縄県
          required: true
        - schema:
            type: string
            pattern: '^([0-9]{5}|[-])$'
            default: '-'
          in: query
          name: city_cd
          description: '市区町村コード<br>参照: https://www.e-stat.go.jp/municipalities/cities/areacode'
        - schema:
            type: string
            enum:
              - '0'
              - '3'
            default: '0'
          in: query
          name: matter
          description: 表示内容<br>`0` 総人口<br>`3` 世帯数
        - schema:
            type: string
            enum:
              - '0'
              - '1'
            default: '0'
          in: query
          name: displayMethod
          description: 表示方法<br>`0` 総数<br>`1` 増減数
  /population/futureMesh/chart:
    get:
      summary: 将来人口区分メッシュ度数分布図
      tags:
        - 1.人口マップ / 8.将来人口メッシュ
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefCode:
                        type: string
                        description: 対象の県コード
                      prefName:
                        type: string
                        description: 対象の県名
                      cityCode:
                        type: string
                        description: 対象の市区町村コード
                      cityName:
                        type: string
                        description: 対象の市区町村名
                      year:
                        type: string
                        description: 年
                      displayMethod:
                        type: string
                        description: 表示方法
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            classification_cd:
                              type: string
                              description: 区分ランク
                            classification_name:
                              type: string
                              description: 区分表示名
                            value1:
                              type: integer
                              description: メッシュ数の値
                            value2:
                              type: number
                              description: メッシュ累積度数の値
                            value3:
                              type: number
                              description: 人口累積度数の値
      operationId: api.v1.population.future_mesh.chart
      description: 指定地域に関する、地域将来人口メッシュ数と人口累積度数を返します。
      parameters:
        - schema:
            type: string
            enum:
              - '2015'
              - '2020'
              - '2030'
              - '2040'
              - '2050'
          in: query
          name: year
          description: 年度
          required: true
        - $ref: '#/components/parameters/prefCode'
        - schema:
            type: string
            pattern: '^([0-9]{5}|[-])$'
            default: '-'
          in: query
          name: city_cd
          description: '市区町村コード<br>参照: https://www.e-stat.go.jp/municipalities/cities/areacode'
        - schema:
            type: string
            enum:
              - '0'
              - '1'
            default: '0'
          in: query
          name: displayMethod
          description: 表示方法<br>`0` 総数<br>`1` 増減数
  /industry/power/forIndustry:
    get:
      summary: 産業別特化係数
      tags:
        - 2.産業構造マップ / 1.全産業
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefName:
                        type: string
                        description: 対象の県コード
                      prefCode:
                        type: integer
                        description: 対象の県名
                      sicCode:
                        type: string
                        description: 産業大分類コード、取得できない場合は空文字
                      sicName:
                        type: string
                        description: 産業大分類名、取得できない場合は空文字
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            simcCode:
                              type: string
                              description: 産業中分類コード、取得できない場合は空文字
                            simcName:
                              type: string
                              description: 産業中分類名、取得できない場合は空文字
                            value:
                              type: number
                              description: 特化係数（付加価値額）
                            employee:
                              type: number
                              description: 特化係数（従業者数）
                            labor:
                              type: number
                              description: 特化係数（労働生産性）
      operationId: api.v1.industry.power.for_industry
      description: 地域単位、年単位、産業単位の特化係数（付加価値額、従業者数、労働生産性）のデータを返す。
      parameters:
        - schema:
            type: string
            enum:
              - '2012'
              - '2016'
          in: query
          name: year
          description: 年度
          required: true
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
        - schema:
            type: string
            default: '-'
            pattern: '^([A-T]|[-])$'
          in: query
          name: sicCode
          description: '産業大分類コード<br>参照: https://www.e-stat.go.jp/classifications/terms/10'
  /industry/power/forArea:
    get:
      summary: 地域別特化係数
      tags:
        - 2.産業構造マップ / 1.全産業
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefCode:
                        type: string
                        description: 対象の県コード
                      prefName:
                        type: string
                        description: 対象の県名
                      sicCode:
                        type: string
                        description: 産業大分類コード、取得できない場合は空文字
                      sicName:
                        type: string
                        description: 産業大分類名、取得できない場合は空文字
                      simcCode:
                        type: string
                        description: 産業中分類コード、取得できない場合は空文字
                      simcName:
                        type: string
                        description: 産業中分類名、取得できない場合は空文字
                      prefectures:
                        type: array
                        items:
                          type: object
                          properties:
                            prefCode:
                              type: integer
                              description: 県コード
                            prefName:
                              type: string
                              description: 県名
                            value:
                              type: number
                              description: 特化係数（付加価値額）または特化係数（従業者数）または特化係数（労働生産性）
                      cities:
                        type: array
                        items:
                          type: object
                          properties:
                            prefCode:
                              type: integer
                              description: 県コード
                            prefName:
                              type: string
                              description: 県名
                            cityCode:
                              type: string
                              description: 市町村コード
                            cityName:
                              type: string
                              description: 市町村名
                            value:
                              type: number
                              description: 特化係数（付加価値額）または特化係数（従業者数）または特化係数（労働生産性）
      operationId: api.v1.industry.power.for_area
      description: 指定された産業の地域ごとの特化係数のグラフ描画用のデータを返します。
      parameters:
        - schema:
            type: string
            enum:
              - '2012'
              - '2016'
          in: query
          name: year
          description: 年度
          required: true
        - $ref: '#/components/parameters/prefCode'
        - schema:
            type: string
            enum:
              - '1'
              - '2'
            default: '1'
          in: query
          name: areaType
          description: 表示方法<br>`1` 全国の分布を見る<br>`2` 都道府県内の分布を見る
        - schema:
            type: string
            enum:
              - '1'
              - '2'
              - '3'
            default: '1'
          in: query
          name: dispType
          description: 表示内容<br>`1` 特化係数（付加価値額）<br>`2` 特化係数（労働生産性）<br>`3` 特化係数（従業者数）
        - schema:
            type: string
            pattern: '^([A-T]|[-])$'
            default: '-'
          in: query
          name: sicCode
          description: '産業大分類コード<br>参照: https://www.e-stat.go.jp/classifications/terms/10'
        - schema:
            type: string
            default: '-'
            pattern: '^([0-9]{2}|[-])$'
          in: query
          name: simcCode
          description: '産業中分類コード<br>参照: https://www.e-stat.go.jp/classifications/terms/10'
        - schema:
            type: string
            pattern: '^(([A-T]_([0-9]{2})*)[,]?)+$'
          in: query
          name: addIndustry
          description: '産業大分類コードと産業中分類コード<br>他の産業と合算した値を取得する際に使用するパラメータです。 「産業大分類コード_産業中分類コード」の形式で指定します。 最大10個指定出来、11個以上送られてきた場合はステータスコード400を返します。 例えば、1つ目が産業大分類コードのみ、2つ目が産業中分類コードまで選択されている場合は、「addIndustry=A_,A_01」と指定します。'
  /industry/power/forManufacturerEstablishments:
    get:
      summary: 製造業事業所単位分析_継続・参入・退出事業所別の推移
      tags:
        - 2.産業構造マップ / 1.全産業
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefCode:
                        type: integer
                        description: 対象の県コード
                      prefName:
                        type: string
                        description: 対象の県名
                      sicCode:
                        type: string
                        description: 産業大分類コード、取得できない場合は空文字
                      sicName:
                        type: string
                        description: 産業中分類名、取得できない場合は空文字
                      simcCode:
                        type: string
                        description: 産業中分類コード、取得できない場合は空文字
                      simcName:
                        type: string
                        description: 産業大分類名、取得できない場合は空文字
                      establishments:
                        type: array
                        items:
                          type: object
                          properties:
                            label:
                              type: string
                              description: 全事業所、継続、 参入、 退出のいずれか
                            data:
                              type: array
                              items:
                                type: object
                                properties:
                                  year:
                                    type: integer
                                    description: 年度
                                  value:
                                    type: number
                                    description: 平均付加価値額
                                  labor:
                                    type: number
                                    description: 平均労働生産性
                                  employee:
                                    type: number
                                    description: 平均従業者数
      operationId: api.v1.industry.power.for_manufacturer_establishments
      description: 指定された地域および産業の継続・参入・退出事業所別の推移データを返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
        - schema:
            type: string
            pattern: '^([A-T]|[-])$'
            default: '-'
          in: query
          name: sicCode
          description: '産業大分類コード<br>参照: https://www.e-stat.go.jp/classifications/terms/10'
        - schema:
            type: string
            pattern: '^([0-9]{2}|[-])$'
            default: '-'
          in: query
          name: simcCode
          description: '産業中分類コード<br>参照: https://www.e-stat.go.jp/classifications/terms/10'
        - $ref: '#/components/parameters/addArea'
  /municipality/company/perYear:
    get:
      summary: 企業数
      tags:
        - 2.産業構造マップ / 1.全産業
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefCode:
                        type: integer
                        description: 対象の県コード
                      prefName:
                        type: string
                        description: 対象の県名
                      cityCode:
                        type: string
                        description: 対象の市区町村コード
                      cityName:
                        type: string
                        description: 対象の市区町村名
                      sicName:
                        type: string
                        description: 産業大分類コード、取得できない場合は空文字
                      sicCode:
                        type: string
                        description: 産業大分類名、取得できない場合は空文字
                      simcName:
                        type: string
                        description: 産業中分類コード、取得できない場合は空文字
                      simcCode:
                        type: string
                        description: 産業中分類名、取得できない場合は空文字
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            year:
                              type: integer
                              description: 年
                            value:
                              type: integer
                              description: 企業数
      operationId: api.v1.municipality.company.per_year
      description: 地域単位、年単位の企業数のデータを返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
        - $ref: '#/components/parameters/sicCode'
        - $ref: '#/components/parameters/simcCode'
  /municipality/plant/perYear:
    get:
      summary: 事業所数
      tags:
        - 2.産業構造マップ / 1.全産業
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefCode:
                        type: integer
                        description: 対象の県コード
                      prefName:
                        type: string
                        description: 対象の県名
                      cityCode:
                        type: string
                        description: 対象の市区町村コード
                      cityName:
                        type: string
                        description: 対象の市区町村名
                      sicName:
                        type: string
                        description: 産業大分類名、取得できない場合は空文字
                      sicCode:
                        type: string
                        description: 産業大分類コード、取得できない場合は空文字
                      simcName:
                        type: string
                        description: 産業中分類名、取得できない場合は空文字
                      simcCode:
                        type: string
                        description: 産業中分類コード、取得できない場合は空文字
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            year:
                              type: integer
                              description: 年
                            value:
                              type: integer
                              description: 事業所数
      operationId: api.v1.municipality.plant.per_year
      description: 地域単位、年単位の事業所数のデータを返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
        - $ref: '#/components/parameters/sicCode'
        - $ref: '#/components/parameters/simcCode'
  /municipality/employee/perYear:
    get:
      summary: 従業者数（事業所単位）
      tags:
        - 2.産業構造マップ / 1.全産業
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefCode:
                        type: integer
                        description: 対象の県コード
                      prefName:
                        type: string
                        description: 対象の県名
                      cityCode:
                        type: string
                        description: 対象の市区町村コード
                      cityName:
                        type: string
                        description: 対象の市区町村名
                      sicName:
                        type: string
                        description: 産業大分類名、取得できない場合は空文字
                      sicCode:
                        type: string
                        description: 産業大分類コード、取得できない場合は空文字
                      simcName:
                        type: string
                        description: 産業中分類名、取得できない場合は空文字
                      simcCode:
                        type: string
                        description: 産業中分類コード、取得できない場合は空文字
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            year:
                              type: integer
                              description: 年
                            value:
                              type: integer
                              description: 従業者数（事業所単位）
      operationId: api.v1.municipality.employee.per_year
      description: 地域単位、年単位の従業者数（事業所単位）のデータを返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
        - $ref: '#/components/parameters/sicCode'
        - $ref: '#/components/parameters/simcCode'
  /municipality/value/perYear:
    get:
      summary: 付加価値額（企業単位）
      tags:
        - 2.産業構造マップ / 1.全産業
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefCode:
                        type: integer
                        description: 対象の県コード
                      prefName:
                        type: string
                        description: 対象の県名
                      cityCode:
                        type: string
                        description: 対象の市区町村コード
                      cityName:
                        type: string
                        description: 対象の市区町村名
                      sicName:
                        type: string
                        description: 産業大分類名、取得できない場合は空文字
                      sicCode:
                        type: string
                        description: 産業大分類コード、取得できない場合は空文字
                      simcName:
                        type: string
                        description: 産業中分類名、取得できない場合は空文字
                      simcCode:
                        type: string
                        description: 産業中分類コード、取得できない場合は空文字
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            year:
                              type: integer
                              description: 年
                            value:
                              type: integer
                              description: 付加価値額（企業単位）(万円)
                            concealmentFlg:
                              type: integer
                              description: 秘匿フラグ
      operationId: api.v1.municipality.value.per_year
      description: 地域単位、年単位の付加価値額（企業単位）のデータを返します。
      parameters:
        - schema:
            type: string
            enum:
              - '2012'
              - '2016'
          in: query
          name: year
          description: 年
          required: true
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
        - $ref: '#/components/parameters/sicCode'
        - $ref: '#/components/parameters/simcCode'
  /municipality/labor/perYear:
    get:
      summary: 労働生産性（企業単位）
      tags:
        - 2.産業構造マップ / 1.全産業
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefCode:
                        type: integer
                        description: 対象の県コード
                      prefName:
                        type: string
                        description: 対象の県名
                      cityCode:
                        type: string
                        description: 対象の市区町村コード
                      cityName:
                        type: string
                        description: 対象の市区町村名
                      sicName:
                        type: string
                        description: 産業大分類名、取得できない場合は空文字
                      simcName:
                        type: string
                        description: 産業中分類名、取得できない場合は空文字
                      data:
                        type: array
                        items:
                          type: object
                          properties:
                            year:
                              type: integer
                              description: 年
                            value:
                              type: integer
                              description: 労働生産性（企業単位）. 秘匿の場合はNULL
                            concealmentFlg:
                              type: integer
                              description: '秘匿か否か. 秘匿ではない場合0, 秘匿の場合1. (秘匿のデータ=Xのデータ)'
      operationId: api.v1.municipality.labor.per_year
      description: 地域単位、年単位の労働生産性（企業単位）のデータを返します。
      parameters:
        - schema:
            type: string
            enum:
              - '2012'
              - '2016'
          in: query
          name: year
          description: 年
          required: true
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
        - $ref: '#/components/parameters/sicCode'
        - $ref: '#/components/parameters/simcCode'
  /industry/statisticsall/forEntireStacked:
    get:
      summary: 産業構造推移
      tags:
        - 2.産業構造マップ / 2.製造業
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefCode:
                        type: string
                        description: 対象の県コード
                      prefName:
                        type: string
                        description: 対象の県名
                      cityCode:
                        type: string
                        description: 対象の市町村コード
                      cityName:
                        type: string
                        description: 対象の市町村名
                      matter:
                        type: string
                        description: 表示内容
                      sicCode:
                        type: string
                        description: 産業大分類コード、取得できない場合は空文字
                      simcCode:
                        type: string
                        description: 産業中分類コード、取得できない場合は空文字
                      changes:
                        type: array
                        items:
                          type: object
                          properties:
                            largeClassificationCode:
                              type: string
                              description: 大分類コード
                            largeClassificationName:
                              type: string
                              description: 大分類名
                            middleClassificationCode:
                              type: string
                              description: 中分類コード
                            middleClassificationName:
                              type: string
                              description: 中分類名
                            narrowClassificationCode:
                              type: string
                              description: 小分類コード
                            narrowClassificationName:
                              type: string
                              description: 小分類名
                            data:
                              type: array
                              items:
                                type: object
                                properties:
                                  year:
                                    type: string
                                    description: 年
                                  value:
                                    type: number
                                    description: 値
      operationId: api.v1.industry.statisticsall.for_entire_stacked
      description: 製造業に紐付く業種単位での事業所数を年毎に返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
        - schema:
            type: string
            enum:
              - '1'
              - '2'
              - '3'
              - '4'
              - '5'
              - '6'
            default: '1'
          in: query
          name: matter
          description: 表示内容<br>`1` 事業所数で表示する<br>`2` 常用従業員数で表示する<br>`3` 出荷額で表示する<br>`4` 付加価値額で表示する<br>`5` 労働生産性で表示する<br>`6` 現金給与総額で表示する
        - $ref: '#/components/parameters/sicCode'
        - $ref: '#/components/parameters/simcCode'
        - $ref: '#/components/parameters/addArea'
  /industry/statisticsDistribution/forLine:
    get:
      summary: 製造業地域間比較
      tags:
        - 2.産業構造マップ / 2.製造業
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    nullable: true
                  result:
                    type: object
                    properties:
                      prefCode:
                        type: string
                        description: 対象の県コード
                      prefName:
                        type: string
                        description: 対象の県名
                      cityCode:
                        type: string
                        description: 対象の市町村コード
                      cityName:
                        type: string
                        description: 対象の市町村名
                      economyCode:
                        type: string
                        description: 対象の経済圏コード（未実装）
                      economyName:
                        type: string
                        description: 対象の経済圏名（未実装）
                      year:
                        type: string
                        description: 年
                      sicCode:
                        type: string
                        description: 産業大分類コード、取得できない場合は空文字
                      sicName:
                        type: string
                        description: 産業大分類名、取得できない場合は空文字
                      simcCode:
                        type: string
                        description: 産業中分類コード、取得できない場合は空文字
                      simcName:
                        type: string
                        description: 産業中分類名、取得できない場合は空文字
                      siscCode:
                        type: string
                        description: 産業小分類コード、取得できない場合は空文字
                      siscName:
                        type: string
                        description: 産業小分類名、取得できない場合は空文字
                      changes:
                        type: array
                        items:
                          type: object
                          properties:
                            label:
                              type: string
                              description: ラベル
                            data:
                              type: array
                              items:
                                type: object
                                properties:
                                  year:
                                    type: integer
                                    description: 年
                                  value:
                                    type: number
                                    description: 値
      operationId: api.v1.industry.statistics_distribution.for_line
      description: 製造業に関する各種指標と地域単位・年単位で返します。
      parameters:
        - $ref: '#/components/parameters/prefCode'
        - $ref: '#/components/parameters/cityCode'
        - schema:
            type: string
            default: '1'
            enum:
              - '1'
              - '2'
              - '3'
              - '4'
              - '5'
              - '6'
          in: query
          name: matter
          description: 表示内容<br>`1` 事業所数で表示する<br>`2` 常用従業員数で表示する<br>`3` 出荷額で表示する<br>`4` 付加価値額で表示する<br>`5` 労働生産性で表示する<br>`6` 現金給与総額で表示する
        - schema:
            type: string
            default: '1'
            enum:
              - '1'
              - '2'
              - '3'
              - '4'
          in: query
          name: unit
          description: 表示単位<br>`1` 実数で表示する<br>`2` 人口あたりで表示する<br>`3` 従業者1人あたりで表示する<br>`4` 1事業所あたりで表示する
        - $ref: '#/components/parameters/sicCode'
        - $ref: '#/components/parameters/simcCode'
        - $ref: '#/components/parameters/addArea'
components:
  schemas:
    pref_code:
      type: string
      title: pref_code
      x-stoplight:
        id: xa51jkvo6bogj
      description: |-
        都道府県コード

        `01` 北海道 `02` 青森県 `03` 岩手県 `04` 宮城県 `05` 秋田県 `06` 山形県 `07` 福島県 `08` 茨城県 `09` 栃木県 `10` 群馬県 `11` 埼玉県 `12` 千葉県 `13` 東京都 `14` 神奈川県 `15` 新潟県 `16` 富山県 `17` 石川県 `18` 福井県 `19` 山梨県 `20` 長野県 `21` 岐阜県 `22` 静岡県 `23` 愛知県 `24` 三重県 `25` 滋賀県 `26` 京都府 `27` 大阪府 `28` 兵庫県 `29` 奈良県 `30` 和歌山県 `31` 鳥取県 `32` 島根県 `33` 岡山県 `34` 広島県 `35` 山口県 `36` 徳島県 `37` 香川県 `38` 愛媛県 `39` 高知県 `40` 福岡県 `41` 佐賀県 `42` 長崎県 `43` 熊本県 `44` 大分県 `45` 宮崎県 `46` 鹿児島県 `47` 沖縄県
      enum:
        - '01'
        - '02'
        - '03'
        - '04'
        - '05'
        - '06'
        - '07'
        - '08'
        - '09'
        - '10'
        - '11'
        - '12'
        - '13'
        - '14'
        - '15'
        - '16'
        - '17'
        - '18'
        - '19'
        - '20'
        - '21'
        - '22'
        - '23'
        - '24'
        - '25'
        - '26'
        - '27'
        - '28'
        - '29'
        - '30'
        - '31'
        - '32'
        - '33'
        - '34'
        - '35'
        - '36'
        - '37'
        - '38'
        - '39'
        - '40'
        - '41'
        - '42'
        - '43'
        - '44'
        - '45'
        - '46'
        - '47'
      x-examples: {}
      example: '13'
    city_code:
      type: string
      title: city_code
      x-stoplight:
        id: za60sus04p2yx
      description: |-
        市区町村コード

        参照: https://www.e-stat.go.jp/municipalities/cities/areacode
      pattern: '^(0[1-9]|[1-3][0-9]|4[0-7])([0-9]{3})$'
      x-examples: {}
      example: '13101'
  securitySchemes: {}
  parameters:
    addArea:
      name: addArea
      in: query
      required: false
      schema:
        type: string
        pattern: '^((([1-9]|[1-3][0-9]|4[0-7])_([0-9]{5})*)[,]?)+$'
      description: '追加エリアコード<br>他地域と合算した値を取得する際に使用するパラメータです。 「addArea=都道府県コード_市区町村コード」の形式で指定します。 複数指定する場合は「addArea=1_01100,13_13101」などのように、「,」 で各地域のパラメータを区切ります。 都道府県単位で指定する場合、「addArea=1_,13_」の形式で指定します。 最大10個指定でき、11個以上送られてきた場合はステータスコード400を返します。<br>「cityCode」で「すべての市区町村」(-)を選択した場合、addAreaで合算されるのは、都道府県単位の数値となります。 また、「cityCode」でいずれかの市区町村(13101など)を選択した場合、addAreaで合算されるのは、市区町村単位の数値となります。'
    prefCode:
      name: prefCode
      in: query
      required: true
      schema:
        type: integer
        minimum: 1
        maximum: 47
      description: 都道府県コード<br>`1` 北海道 `2` 青森県 `3` 岩手県 `4` 宮城県 `5` 秋田県 `6` 山形県 `7` 福島県 `8` 茨城県<br>`9` 栃木県 `10` 群馬県 `11` 埼玉県 `12` 千葉県 `13` 東京都 `14` 神奈川県 `15` 新潟県 `16` 富山県<br>`17` 石川県 `18` 福井県 `19` 山梨県 `20` 長野県 `21` 岐阜県 `22` 静岡県 `23` 愛知県 `24` 三重県<br>`25` 滋賀県 `26` 京都府 `27` 大阪府 `28` 兵庫県 `29` 奈良県 `30` 和歌山県 `31` 鳥取県 `32` 島根県<br>`33` 岡山県 `34` 広島県 `35` 山口県 `36` 徳島県 `37` 香川県 `38` 愛媛県 `39` 高知県 `40` 福岡県<br>`41` 佐賀県 `42` 長崎県 `43` 熊本県 `44` 大分県 `45` 宮崎県 `46` 鹿児島県 `47` 沖縄県
    cityCode:
      name: cityCode
      in: query
      schema:
        type: string
        pattern: '^([0-9]{5}|[-])$'
        default: '-'
      description: '市区町村コード<br>参照: https://www.e-stat.go.jp/municipalities/cities/areacode'
    sicCode:
      name: sicCode
      in: query
      required: false
      schema:
        type: string
        default: '-'
        pattern: '^([A-T]|[-])$'
      description: '産業大分類コード<br>参照: https://www.e-stat.go.jp/classifications/terms/10'
    simcCode:
      name: simcCode
      in: query
      required: false
      schema:
        type: string
        default: '-'
        pattern: '^([0-9]{2}|[-])$'
      description: '産業中分類コード<br>参照: https://www.e-stat.go.jp/classifications/terms/10'
  requestBodies: {}
info:
  title: RESAS API
  description: RESAS API
  version: '1.0'
  contact:
    name: ot-nemoto
    url: 'https://github.com/ot-nemoto/resas-api/issues'
    email: nemoto@opentone.co.jp
  license:
    name: Apache 2.0
    url: 'https://www.apache.org/licenses/LICENSE-2.0.html'
servers:
  - url: 'http://127.0.0.1:8080/api/v1'
tags:
  - name: 1.人口マップ / 1.人口構成
    description: 人口マップ/人口構成
  - name: 1.人口マップ / 2.人口増減
    description: 人口マップ/人口増減
  - name: 1.人口マップ / 3.人口の自然増減
    description: 人口マップ/人口の自然増減
  - name: 1.人口マップ / 4.人口の社会増減
    description: 人口マップ/人口の社会増減
  - name: 1.人口マップ / 5.新卒者就職・進学
    description: 人口マップ/新卒者就職・進学
  - name: 1.人口マップ / 6.将来人口推計
    description: 人口マップ/将来人口推計
  - name: 1.人口マップ / 7.人口メッシュ
    description: 人口マップ/人口メッシュ
  - name: 1.人口マップ / 8.将来人口メッシュ
    description: 人口マップ/将来人口メッシュ
  - name: 2.産業構造マップ / 1.全産業
    description: 産業構造マップ/全産業
  - name: 2.産業構造マップ / 2.製造業
    description: 産業構造マップ/製造解行
  - name: 2.産業構造マップ / 3.小売・卸売業（消費）
    description: 産業構造マップ/小売・卸売業（消費）
  - name: 2.産業構造マップ / 4.農業
    description: 産業構造マップ/農業
  - name: 2.産業構造マップ / 5.林業
    description: 産業構造マップ/林業
  - name: 2.産業構造マップ / 6.水産業
    description: 産業構造マップ/水産豪
  - name: 3.企業活動マップ / 1.企業情報
    description: 企業活動マップ/企業情報
  - name: 3.企業活動マップ / 2.海外取引
    description: 企業活動マップ/海外取引
  - name: 3.企業活動マップ / 3.研修開発
    description: 企業活動マップ/研究開発
  - name: 4.観光マップ / 1.国内
    description: 観光マップ/国内
  - name: 4.観光マップ / 2.外国人
    description: 観光マップ/外国人
  - name: 5.まちづくりマップ / 1.From-to分析（滞在人口）
    description: まちづくりマップ/From-to分析（滞在人口）
  - name: 5.まちづくりマップ / 2.通勤通学人口
    description: まちづくりマップ/通勤通学人口
  - name: 5.まちづくりマップ / 3.不動産取引
    description: まちづくりマップ/不動産取引
  - name: 6.雇用／医療・福祉マップ / 1.一人当たり賃金
    description: 雇用／医療・福祉マップ/一人当たり賃金
  - name: 6.雇用／医療・福祉マップ / 2.有効求人倍率
    description: 雇用／医療・福祉マップ/有効求人倍率
  - name: 6.雇用／医療・福祉マップ / 3.求人・求職者
    description: 雇用／医療・福祉マップ/求人・求職者
  - name: 6.雇用／医療・福祉マップ / 4.医療需給
    description: 雇用／医療・福祉マップ/医療需給
  - name: 6.雇用／医療・福祉マップ / 5.介護需給
    description: 雇用／医療・福祉マップ/介護需給
  - name: 7.地方財政マップ / 1.自治体財政状況の比較
    description: 地方財政マップ/自治体財政状況の比較
  - name: 7.地方財政マップ / 2.一人当たり地方税
    description: 地方財政マップ/一人当たり地方税
  - name: 7.地方財政マップ / 3.一人当たり市町村民税法人分
    description: 地方財政マップ/一人当たり市町村民税法人分
  - name: 7.地方財政マップ / 4.一人当たり固定資産税
    description: 地方財政マップ/一人当たり固定資産税
